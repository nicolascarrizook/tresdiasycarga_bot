version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    container_name: sistema_mayra_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-mayra_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mayra_pass}
      POSTGRES_DB: ${POSTGRES_DB:-nutrition_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-mayra_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: sistema_mayra_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  chromadb:
    image: chromadb/chroma:latest
    container_name: sistema_mayra_chromadb
    restart: unless-stopped
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
      - ANONYMIZED_TELEMETRY=FALSE
    ports:
      - "${CHROMA_PORT:-8001}:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    container_name: sistema_mayra_api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-mayra_user}:${POSTGRES_PASSWORD:-mayra_pass}@postgres:5432/${POSTGRES_DB:-nutrition_db}
      - REDIS_URL=redis://redis:6379
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - API_HOST=0.0.0.0
      - API_PORT=8000
    volumes:
      - ./api:/app/api
      - ./data:/app/data
      - ./logs:/app/logs
    ports:
      - "${API_PORT:-8000}:8000"
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload

  telegram_bot:
    build:
      context: .
      dockerfile: ./docker/telegram_bot/Dockerfile
    container_name: sistema_mayra_telegram_bot
    restart: unless-stopped
    depends_on:
      - api
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - API_BASE_URL=http://api:8000
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./telegram_bot:/app/telegram_bot
      - ./logs:/app/logs
    command: python -m telegram_bot.main

  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    container_name: sistema_mayra_nginx
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./static:/usr/share/nginx/html/static:ro
      - nginx_logs:/var/log/nginx

  n8n:
    image: n8nio/n8n:latest
    container_name: sistema_mayra_n8n
    restart: unless-stopped
    ports:
      - "${N8N_PORT:-5678}:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-n8n_pass}
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_WEBHOOK_BASE_URL=${N8N_WEBHOOK_BASE_URL:-http://localhost:5678}
      - GENERIC_TIMEZONE=America/Argentina/Buenos_Aires
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n_workflows:/home/node/workflows

volumes:
  postgres_data:
  redis_data:
  chroma_data:
  nginx_logs:
  n8n_data:

networks:
  default:
    name: sistema_mayra_network