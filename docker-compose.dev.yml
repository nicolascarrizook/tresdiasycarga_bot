version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: mayra_db_dev
    environment:
      POSTGRES_DB: mayra_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - mayra_network_dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mayra_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: mayra_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - mayra_network_dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # API Service
  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    container_name: mayra_api_dev
    environment:
      - ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/mayra_db
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=dev-secret-key-change-in-production
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - ALLOWED_HOSTS=localhost,127.0.0.1,api
      - DEBUG=true
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mayra_network_dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Telegram Bot Service
  telegram_bot:
    build:
      context: .
      dockerfile: docker/telegram_bot/Dockerfile
    container_name: mayra_telegram_bot_dev
    environment:
      - ENV=development
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - API_BASE_URL=http://api:8000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/mayra_db
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_healthy
    networks:
      - mayra_network_dev
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: mayra_nginx_dev
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - mayra_network_dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PGAdmin for database management (development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mayra_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mayra.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - mayra_network_dev
    restart: unless-stopped

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local

networks:
  mayra_network_dev:
    driver: bridge